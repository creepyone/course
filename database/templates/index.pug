doctype html
html
    head
        script(type="text/javascript", src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous")
        script(type="text/javascript", src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js", integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0", crossorigin="anonymous")
        script(type="text/javascript" src="http://ajax.microsoft.com/ajax/jquery/jquery-1.4.2.min.js")
        script(type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js")
        link(rel="shortcut icon" href="#")
        link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous")
        script.
            $(document).ready(function() {

            $("#show").click(
                function () {
                    show_graph();
                }
            )

            $('#filter').click(
                function() {
                dynamic_queries();
                }
            )

            function dynamic_queries(){
                var message = {
                    genre: $('#genre').val()
            }
            $('#result_table').empty();
            $.ajax({
                type:'POST',
                url: '/get_genre',
                processData: false,  // tell jQuery not to process the data
                contentType: false,  // tell jQuery not to set contentType
                data: JSON.stringify(message),
                success: (data) => {
                    for(i in data)
                    {
                        movie = data[i]
                    $('#result_table').append("<tr>" +
                    "<td class='num'>"+movie['movie_id']+"</td>" +
                    "<td>"+movie['title']+"</td>" +
                    "<td class='num'>"+movie['year']+"</td>" +
                    "<td>"+movie['genre']+"</td>" +
                    "<td class='num'>"+movie['rating']+"</td>" +
                    "<td class='num'>"+movie['votes']+"</td>" +
                    "</tr>")
                    }
                    }
                });
            }

            function show_graph() {
                var param = {
                    attribute: $('#selection').val()
                }
                $.ajax({
                    type: 'POST',
                    url: "/get_graph",
                    processData: false,  // tell jQuery not to process the data
                    contentType: false,  // tell jQuery not to set contentType
                    data: JSON.stringify(param),
                    success: (data) => {
                        var labels = [];
                        var values = [];
                        var str = $('#selection').val();
                        if (str === "Rating"){
                            for (i in data) {
                                labels.push(data[i]["title"])
                                values.push(data[i]["rating"])
                            }
                        }else {
                            for (i in data) {
                                labels.push(data[i]["title"])
                                values.push(data[i]["votes"])
                            }
                        }
                        $("#my_chart").remove()
                        $("#canvas_holder").append("<canvas id=\"my_chart\" class=\"mx-2 my-2\"></canvas>")
                        var ctx = document.getElementById('my_chart').getContext('2d');
                        var myChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: labels,
                                datasets: [{
                                    data: values,
                                    backgroundColor: [
                                        'rgba(255, 99, 132, 0.2)',
                                        'rgba(54, 162, 235, 0.2)',
                                        'rgba(255, 206, 86, 0.2)',
                                        'rgba(75, 192, 192, 0.2)',
                                        'rgba(153, 102, 255, 0.2)',
                                        'rgba(255, 159, 64, 0.2)'
                                    ],
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                },
                                plugins:  {
                                    legend: false,
                                    title: {
                                        display: true,
                                        text: str
                                    }
                                }
                            }
                        });
                    }})}});
    style().
            .num {
                text-align: center;
            }
            .header {
                text-align: center;
                font-weight: bold;
            }
    header.bg-secondary
        nav.nav
            a.nav-link.w-auto.text-white.lead(href='/#') IMDb
            a.nav-link.w-auto.text-white.lead(href='/database/movies') Films
            a.nav-link.w-auto.text-white.lead(href='/database/actors') Actors
            a.nav-link.w-auto.text-white.lead(href='/database/directors') Directors
            a.nav-link.w-auto.text-white.lead(href='/static') Static queries
            a.nav-link.w-auto.text-white.lead(href='/dynamic') Dynamic queries
            a.nav-link.w-auto.text-white.lead(href='/graph') Visualization
    body
